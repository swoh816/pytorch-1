<<<<<<< HEAD
# Adapted from https://github.com/pandas-dev/pandas/blob/master/azure-pipelines.yml
jobs:
- template: build_tools/azure/posix.yml
  parameters:
    name: Linux
    vmImage: ubuntu-16.04
    matrix:
      # Linux environment to test that scikit-learn can be built against
      # versions of numpy, scipy with ATLAS that comes with Ubuntu Xenial 16.04
      # i.e. numpy 1.11 and scipy 0.17
      py35_ubuntu_atlas:
        DISTRIB: 'ubuntu'
        PYTHON_VERSION: '3.5'
        JOBLIB_VERSION: '0.11'
        SKLEARN_NO_OPENMP: 'True'
      # Linux + Python 3.5 build with OpenBLAS and without SITE_JOBLIB
      py35_conda_openblas:
        DISTRIB: 'conda'
        PYTHON_VERSION: '3.5'
        INSTALL_MKL: 'false'
        NUMPY_VERSION: '1.11.0'
        SCIPY_VERSION: '0.17.0'
        PANDAS_VERSION: '*'
        CYTHON_VERSION: '*'
        PILLOW_VERSION: '4.0.0'
        MATPLOTLIB_VERSION: '1.5.1'
        # later version of joblib are not packaged in conda for Python 3.5
        JOBLIB_VERSION: '0.12.3'
        COVERAGE: 'true'
      # Linux environment to test the latest available dependencies and MKL.
      # It runs tests requiring pandas and PyAMG.
      pylatest_conda_mkl_pandas:
        DISTRIB: 'conda'
        PYTHON_VERSION: '*'
        INSTALL_MKL: 'true'
        NUMPY_VERSION: '*'
        SCIPY_VERSION: '*'
        PANDAS_VERSION: '*'
        CYTHON_VERSION: '*'
        PYAMG_VERSION: '*'
        PILLOW_VERSION: '*'
        JOBLIB_VERSION: '*'
        PYTEST_VERSION: '4.6.2'
        MATPLOTLIB_VERSION: '*'
        COVERAGE: 'true'
        CHECK_PYTEST_SOFT_DEPENDENCY: 'true'
        TEST_DOCSTRINGS: 'true'
        CHECK_WARNINGS: 'true'

- template: build_tools/azure/posix-32.yml
  parameters:
    name: Linux32
    vmImage: ubuntu-16.04
    matrix:
      py35_ubuntu_atlas_32bit:
        DISTRIB: 'ubuntu-32'
        PYTHON_VERSION: '3.5'
        JOBLIB_VERSION: '0.11'
        SKLEARN_NO_OPENMP: 'True'

- template: build_tools/azure/posix.yml
  parameters:
    name: macOS
    vmImage: xcode9-macos10.13
    matrix:
      pylatest_conda_mkl:
        DISTRIB: 'conda'
        PYTHON_VERSION: '*'
        INSTALL_MKL: 'true'
        NUMPY_VERSION: '*'
        SCIPY_VERSION: '*'
        CYTHON_VERSION: '*'
        PILLOW_VERSION: '*'
        PYTEST_VERSION: '4.6.2'
        JOBLIB_VERSION: '*'
        COVERAGE: 'true'

- template: build_tools/azure/windows.yml
  parameters:
    name: Windows
    vmImage: vs2017-win2016
    matrix:
      py37_conda_mkl:
        PYTHON_VERSION: '3.7'
        CHECK_WARNINGS: 'true'
        PYTHON_ARCH: '64'
        PYTEST_VERSION: '4.6.2'
        COVERAGE: 'true'
      py35_pip_openblas_32bit:
        PYTHON_VERSION: '3.5'
        PYTHON_ARCH: '32'
=======
trigger:
- master

jobs:
- job: consistent_circleci
  displayName: "Ensure consistent CircleCI YAML"
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "3.7"
  - script: pip install -r requirements.txt
  - script: cd .circleci && ./ensure-consistency.py

- job: shellcheck_jenkins
  displayName: "Shellcheck Jenkins scripts"
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - script: sudo apt-get install -y shellcheck
  - script: .jenkins/run-shellcheck.sh

- job: ensure_no_tabs
  displayName: "Ensure no tabs"
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "2.7"
  - script: (! git grep -I -l $'\t' -- . ':(exclude)*.svg' ':(exclude)**Makefile' ':(exclude)**/contrib/**' ':(exclude)third_party' ':(exclude).gitattributes' ':(exclude).gitmodules' || (echo "The above files have tabs; please convert them to spaces"; false))

- job: python_27_lint
  displayName: "Python 2.7 Lint"
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "2.7"
  - script: pip install flake8
  - script: |
      rm -rf .circleci
      flake8

- job: python_37_lint
  displayName: "Python 3.7 Lint"
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "3.7"
  - script: pip install flake8 flake8-bugbear flake8-mypy flake8-comprehensions flake8-pyi mccabe pycodestyle pyflakes
  - script: flake8

- job: mypy_typecheck
  displayName: "MyPy typecheck"
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "3.6"
  - script: pip install mypy mypy-extensions
  - script: mypy @mypy-files.txt

- job: cpp_doc_check
  displayName: "CPP doc check"
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "3.6"
  - script: sudo apt-get install -y doxygen && pip install -r requirements.txt
  - script: cd docs/cpp/source && ./check-doxygen.sh

- job: clang_tidy
  displayName: "clang tidy"
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "3.6"
  - script: git branch master origin/master
  - script: pip install pyyaml
  - script: tools/run-clang-tidy-in-ci.sh
>>>>>>> upstream/master

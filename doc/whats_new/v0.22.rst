.. include:: _contributors.rst

.. currentmodule:: sklearn

.. _changes_0_22:

Version 0.22.0
==============

**In Development**

Changed models
--------------

The following estimators and functions, when fit with the same data and
parameters, may produce different models from the previous version. This often
occurs due to changes in the modelling logic (bug fixes or enhancements), or in
random sampling procedures.

- :class:`decomposition.SparseCoder`,
  :class:`decomposition.DictionaryLearning`, and
  :class:`decomposition.MiniBatchDictionaryLearning` |Fix|
- :class:`decomposition.SparseCoder` with `algorithm='lasso_lars'` |Fix|
- :class:`decomposition.SparsePCA` where `normalize_components` has no effect
  due to deprecation.

- :class:`linear_model.Ridge` when `X` is sparse. |Fix|

Details are listed in the changelog below.

(While we are trying to better inform users by providing this information, we
cannot assure that this list is complete.)

Changelog
---------

..
    Entries should be grouped by module (in alphabetic order) and prefixed with
    one of the labels: |MajorFeature|, |Feature|, |Efficiency|, |Enhancement|,
    |Fix| or |API| (see whats_new.rst for descriptions).
    Entries should be ordered by those labels (e.g. |Fix| after |Efficiency|).
    Changes not specific to a module should be listed under *Multiple Modules*
    or *Miscellaneous*.
    Entries should end with:
    :pr:`123456` by :user:`Joe Bloggs <joeongithub>`.
    where 123456 is the *pull request* number, not the issue number.

:mod:`sklearn.calibration`
..........................

- |Fix| Fixed a bug that made `calibration.CalibratedClassifierCV` fail when
  given a `sample_weight` parameter of type `list` (in the case where
  `sample_weights` are not supported by the wrapped estimator). :pr:`13575`
  by :user:`William de Vazelhes <wdevazelhes>`.

:mod:`sklearn.datasets`
.......................

- |Feature| :func:`datasets.fetch_openml` now supports heterogeneous data using pandas 
  by setting `as_frame=True`. :pr:`13902` by `Thomas Fan`_.

- |Enhancement| The parameter `return_X_y` was added to
  :func:`datasets.fetch_20newsgroups` and :func:`datasets.fetch_olivetti_faces`
  . :pr:`14259` by :user:`Sourav Singh <souravsingh>`.

:mod:`sklearn.decomposition`
............................

- |Fix| :func:`decomposition.sparse_encode()` now passes the `max_iter` to the
  underlying `LassoLars` when `algorithm='lasso_lars'`. :issue:`12650` by
  `Adrin Jalali`_.

- |Enhancement| :func:`decomposition.dict_learning()` and
  :func:`decomposition.dict_learning_online()` now accept `method_max_iter` and
  pass it to `sparse_encode`. :issue:`12650` by `Adrin Jalali`_.

- |Enhancement| :class:`decomposition.SparseCoder`,
  :class:`decomposition.DictionaryLearning`, and
  :class:`decomposition.MiniBatchDictionaryLearning` now take a
  `transform_max_iter` parameter and pass it to either
  :func:`decomposition.dict_learning()` or
  :func:`decomposition.sparse_encode()`. :issue:`12650` by `Adrin Jalali`_.

- |Enhancement| :class:`decomposition.IncrementalPCA` now accepts sparse
  matrices as input, converting them to dense in batches thereby avoiding the
  need to store the entire dense matrix at once.
  :pr:`13960` by :user:`Scott Gigante <scottgigante>`.

:mod:`sklearn.ensemble`
.......................

- |Feature| :class:`ensemble.HistGradientBoostingClassifier` and
  :class:`ensemble.HistGradientBoostingRegressor` have an additional
  parameter called `warm_start` that enables warm starting. :pr:`14012` by
  :user:`Johann Faouzi <johannfaouzi>`.

- |Fix| :class:`ensemble.HistGradientBoostingClassifier` and
  :class:`ensemble.HistGradientBoostingRegressor` now bin the training and
  validation data separately to avoid any data leak. :pr:`13933` by
  `Nicolas Hug`_.

- |Fix| :func:`ensemble.VotingClassifier.predict_proba` will no longer be
  present when `voting='hard'`. :pr:`14287` by `Thomas Fan`_.

- |Enhancement| :class:`ensemble.HistGradientBoostingClassifier` the training
  loss or score is now monitored on a class-wise stratified subsample to
  preserve the class balance of the original training set. :pr:`14194`
  by :user:`Johann Faouzi <johannfaouzi>`.

- |Fix| :class:`ensemble.AdaBoostClassifier` computes probabilities based on
  the decision function as in the literature. Thus, `predict` and
  `predict_proba` give consistent results.
  :pr:`14114` by :user:`Guillaume Lemaitre <glemaitre>`.

:mod:`sklearn.linear_model`
...........................

- |Enhancement| :class:`linearmodel.BayesianRidge` now accepts hyperparameters
  ``alpha_init`` and ``lambda_init`` which can be used to set the initial value
  of the maximization procedure in :term:`fit`.
  :pr:`13618` by :user:`Yoshihiro Uchida <c56pony>`.

- |Fix| :class:`linear_model.Ridge` now correctly fits an intercept when `X` is
  sparse, `solver="auto"` and `fit_intercept=True`, because the default solver
  in this configuration has changed to `sparse_cg`, which can fit an intercept
  with sparse data. :pr:`13995` by :user:`Jérôme Dockès <jeromedockes>`.

- |Efficiency| The 'liblinear' logistic regression solver is now faster and
  requires less memory.
  :pr:`14108`, pr:`14170` by :user:`Alex Henrie <alexhenrie>`.

:mod:`sklearn.metrics`
......................

- |Feature| Added multiclass support to :func:`metrics.roc_auc_score`.
  :issue:`12789` by :user:`Kathy Chen <kathyxchen>`,
  :user:`Mohamed Maskani <maskani-moh>`, and :user:`Thomas Fan <thomasjpfan>`.
  
- |Feature| Add :class:`metrics.mean_tweedie_deviance` measuring the
  Tweedie deviance for a power parameter ``p``. Also add mean Poisson deviance
  :class:`metrics.mean_poisson_deviance` and mean Gamma deviance
  :class:`metrics.mean_gamma_deviance` that are special cases of the Tweedie
  deviance for `p=1` and `p=2` respectively.
  :pr:`13938` by :user:`Christian Lorentzen <lorentzenchr>` and
  `Roman Yurchak`_.

- |Enhancement| The parameter ``beta`` in :func:`metrics.fbeta_score` is
  updated to accept the zero and `float('+inf')` value.
  :pr:`13231` by :user:`Dong-hee Na <corona10>`.

:mod:`sklearn.model_selection`
..................

- |Enhancement| :class:`model_selection.learning_curve` now accepts parameter
  ``return_times`` which can be used to retrieve computation times in order to
  plot model scalability (see learning_curve example).
  :pr:`13938` by :user:`Hadrien Reboul <H4dr1en>`.

:mod:`sklearn.pipeline`
.......................

- |Enhancement| :class:`pipeline.Pipeline` now supports :term:`score_samples` if
  the final estimator does.
  :pr:`13806` by :user:`Anaël Beaugnon <ab-anssi>`.

:mod:`sklearn.svm`
..................

- |Enhancement| :class:`svm.SVC` and :class:`svm.NuSVC` now accept a
  ``break_ties`` parameter. This parameter results in :term:`predict` breaking
  the ties according to the confidence values of :term:`decision_function`, if
  ``decision_function_shape='ovr'``, and the number of target classes > 2.
  :pr:`12557` by `Adrin Jalali`_.


:mod:`sklearn.preprocessing`
............................

- |Enhancement| Avoid unnecessary data copy when fitting preprocessors
  :class:`preprocessing.StandardScaler`, :class:`preprocessing.MinMaxScaler`,
  :class:`preprocessing.MaxAbsScaler`, :class:`preprocessing.RobustScaler`
  and :class:`preprocessing.QuantileTransformer` which results in a slight
  performance improvement. :pr:`13987` by `Roman Yurchak`_.


:mod:`sklearn.cluster`
......................

- |Enhancement| :class:`cluster.SpectralClustering` now accepts a ``n_components`` 
  parameter. This parameter extends `SpectralClustering` class functionality to
  match `spectral_clustering`.
  :pr:`13726` by :user:`Shuzhe Xiao <fdas3213>`.

:mod:`sklearn.feature_selection`
................................
- |Fix| Fixed a bug where :class:`VarianceThreshold` with `threshold=0` did not
  remove constant features due to numerical instability, by using range
  rather than variance in this case.
  :pr:`13704` by `Roddy MacSween <rlms>`.

:mod:`sklearn.utils`
....................

- |Enhancement| :func:`utils.safe_indexing` accepts an ``axis`` parameter to
  index array-like across rows and columns. The column indexing can be done on
  NumPy array, SciPy sparse matrix, and Pandas DataFrame.
  :pr:`14035` by `Guillaume Lemaitre <glemaitre>`.

:mod:`sklearn.neural_network`
.............................

- |Feature| Add `max_fun` parameter in
  :class:`neural_network.BaseMultilayerPerceptron`,
  :class:`neural_network.MLPRegressor`, and
  :class:`neural_network.MLPClassifier` to give control over
  maximum number of function evaluation to not meet ``tol`` improvement.
  :issue:`9274` by :user:`Daniel Perry <daniel-perry>`.


Miscellaneous
.............

- |API| Replace manual checks with ``check_is_fitted``. Errors thrown when
  using a non-fitted estimators are now more uniform.
  :pr:`13013` by :user:`Agamemnon Krasoulis <agamemnonc>`.

- |Fix| Port `lobpcg` from SciPy which implement some bug fixes but only
  available in 1.3+.
  :pr:`14195` by :user:`Guillaume Lemaitre <glemaitre>`.

Changes to estimator checks
---------------------------

These changes mostly affect library developers.

- Estimators are now expected to raise a ``NotFittedError`` if ``predict`` or
  ``transform`` is called before ``fit``; previously an ``AttributeError`` or
  ``ValueError`` was acceptable.
  :pr:`13013` by by :user:`Agamemnon Krasoulis <agamemnonc>`.

- |Enhancement| Binary only classifiers are now supported in estimator checks.
  Such classifiers need to have the `binary_only=True` estimator tag.
  :pr:`13875` by `Trevor Stephens`_.
